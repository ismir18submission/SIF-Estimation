//////////////////////////////////////////////////////////////////////////////
///////// > openSMILE configuration file mfcc+log-energy <  //////////////////
///////// (c) audEERING UG (haftungsbeschrÃ¤nkt),            //////////////////
/////////     All rights reserverd.                         //////////////////
//////////////////////////////////////////////////////////////////////////////

[componentInstances:cComponentManager]
instance[dataMemory].type=cDataMemory
instance[waveIn].type=cWaveSource
instance[frame].type=cFramer
instance[pe].type=cVectorPreemphasis
instance[window].type=cWindower

instance[fft1].type=cTransformFFT
instance[fftmp1].type=cFFTmagphase
instance[mspec].type=cMelspec
instance[mfcc].type=cMfcc
;instance[energy].type=cEnergy
;instance[cat].type=cVectorConcat
instance[functionals].type=cFunctionals

instance[csvsink].type=cCsvSink
nThreads=1
printLevelStats=0


[waveIn:cWaveSource]
filename=\cm[inputfile(I){test.wav}:name of input file]
writer.dmLevel=wave
;buffersize=16000
monoMixdown=1

[frame:cFramer]
reader.dmLevel=wave
writer.dmLevel=frames
frameSize=0.025
frameStep=0.010
;frameCenterSpecial = left

[pe:cVectorPreemphasis]
reader.dmLevel=frames
writer.dmLevel=framespe
k = 0.97
de = 0

[window:cWindower]
reader.dmLevel=framespe
writer.dmLevel=winoutput
winFunc = ham
gain = 1.0

[fft1:cTransformFFT]
reader.dmLevel=winoutput
writer.dmLevel=fftc

[fftmp1:cFFTmagphase]
reader.dmLevel=fftc
writer.dmLevel=fft

[mspec:cMelspec]
reader.dmLevel=fft
writer.dmLevel=mspec
htkcompatible = 1
nBands = 12
usePower = 1
lofreq = 0
hifreq = 8000

[mfcc:cMfcc]
reader.dmLevel=mspec
writer.dmLevel=mfcc
writer.levelconf.growDyn=1
writer.levelconf.isRb=0
buffersize=1000
firstMfcc = 1
lastMfcc =  12
htkcompatible = 1

;[energy:cEnergy]
;reader.dmLevel=frames
;writer.dmLevel=energy
;writer.levelconf.growDyn=1
;writer.levelconf.isRb=0
;buffersize=1000
;htkcompatible=1
;log = 1

;[cat:cVectorConcat]
;reader.dmLevel=mfcc
;writer.dmLevel=ft0
;copyInputName = 0
;processArrayFields = 0

[functionals:cFunctionals]
reader.dmLevel = mfcc
writer.dmLevel = mfccFunctionals
// nameAppend = 
copyInputName = 1
frameMode = full
frameSize = 0
frameStep = 0
;frameCenterSpecial = left

functionalsEnabled = Extremes ; Percentiles ; Moments ; Segments ; Times ;  Lpc

Extremes.max = 0
Extremes.min = 0
Extremes.maxpos = 0
Extremes.minpos = 0
Extremes.maxameandist = 0
Extremes.minameandist = 0

Segments.maxNumSeg = 100
Segments.segmentationAlgorithm = relTh
Segments.thresholds = 0.25 ; 0.75
Segments.rangeRelThreshold = 0.200000
Segments.numSegments = 0
Segments.meanSegLen = 1
Segments.maxSegLen = 1
Segments.minSegLen = 1
Segments.segLenStddev = 1
Segments.norm = second

Moments.variance = 0
Moments.stddev = 1
Moments.skewness = 1
Moments.kurtosis = 1
Moments.amean = 1

Percentiles.quartiles = 1
Percentiles.iqr = 1
Percentiles.percentile[0] = 0.01
Percentiles.percentile[1] = 0.99
Percentiles.pctlrange[0] = 0-1
Percentiles.interp = 1

Times.upleveltime25 = 1
Times.downleveltime25 = 0
Times.upleveltime50 = 1
Times.downleveltime50 = 0
Times.upleveltime75 = 1
Times.downleveltime75 = 0
Times.upleveltime90 = 1
Times.downleveltime90 = 0
Times.risetime = 1
Times.falltime = 0
Times.leftctime = 1
Times.rightctime = 0
Times.duration = 0
Times.buggySecNorm = 0
Times.norm = segment

Lpc.lpGain = 1
Lpc.lpc = 1
Lpc.firstCoeff = 0
Lpc.order = 5

nonZeroFuncts = 0
masterTimeNorm = segment


[csvsink:cCsvSink]
reader.dmLevel = mfccFunctionals
filename=\cm[outputfile(O){output.csv}:output csv file]
timestamp = 0
append = 0
frameIndex = 0
printHeader = 1

